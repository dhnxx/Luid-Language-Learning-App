// Generated by view binder compiler. Do not edit!
package com.example.luid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.luid.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EachlevelviewBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final TextView levelDescription;

  @NonNull
  public final TextView levelId;

  @NonNull
  public final ImageView levelImage;

  @NonNull
  public final TextView levelTitle;

  private EachlevelviewBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView cardView, @NonNull TextView levelDescription,
      @NonNull TextView levelId, @NonNull ImageView levelImage, @NonNull TextView levelTitle) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.levelDescription = levelDescription;
    this.levelId = levelId;
    this.levelImage = levelImage;
    this.levelTitle = levelTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static EachlevelviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EachlevelviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.eachlevelview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EachlevelviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView cardView = (MaterialCardView) rootView;

      id = R.id.level_description;
      TextView levelDescription = ViewBindings.findChildViewById(rootView, id);
      if (levelDescription == null) {
        break missingId;
      }

      id = R.id.level_id;
      TextView levelId = ViewBindings.findChildViewById(rootView, id);
      if (levelId == null) {
        break missingId;
      }

      id = R.id.level_image;
      ImageView levelImage = ViewBindings.findChildViewById(rootView, id);
      if (levelImage == null) {
        break missingId;
      }

      id = R.id.level_title;
      TextView levelTitle = ViewBindings.findChildViewById(rootView, id);
      if (levelTitle == null) {
        break missingId;
      }

      return new EachlevelviewBinding((MaterialCardView) rootView, cardView, levelDescription,
          levelId, levelImage, levelTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
