// Generated by view binder compiler. Do not edit!
package com.example.luid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.luid.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChildphasecardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Button childButton;

  @NonNull
  public final TextView childDescription;

  @NonNull
  public final ImageView childImage;

  @NonNull
  public final TextView childTitle;

  private ChildphasecardBinding(@NonNull MaterialCardView rootView, @NonNull Button childButton,
      @NonNull TextView childDescription, @NonNull ImageView childImage,
      @NonNull TextView childTitle) {
    this.rootView = rootView;
    this.childButton = childButton;
    this.childDescription = childDescription;
    this.childImage = childImage;
    this.childTitle = childTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ChildphasecardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChildphasecardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.childphasecard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChildphasecardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.childButton;
      Button childButton = ViewBindings.findChildViewById(rootView, id);
      if (childButton == null) {
        break missingId;
      }

      id = R.id.childDescription;
      TextView childDescription = ViewBindings.findChildViewById(rootView, id);
      if (childDescription == null) {
        break missingId;
      }

      id = R.id.childImage;
      ImageView childImage = ViewBindings.findChildViewById(rootView, id);
      if (childImage == null) {
        break missingId;
      }

      id = R.id.childTitle;
      TextView childTitle = ViewBindings.findChildViewById(rootView, id);
      if (childTitle == null) {
        break missingId;
      }

      return new ChildphasecardBinding((MaterialCardView) rootView, childButton, childDescription,
          childImage, childTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
